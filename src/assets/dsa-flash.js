export const dataStructuresAlgosFlashCards = [
    { "question": "What is a Stack?", "answer": "A stack is a linear data structure following the LIFO (Last In, First Out) principle." },
    { "question": "What is a Queue?", "answer": "A queue is a linear data structure following the FIFO (First In, First Out) principle." },
    { "question": "What is the time complexity of accessing an element in an array?", "answer": "O(1), as arrays allow direct access by index." },
    { "question": "What is a Linked List?", "answer": "A linked list is a data structure where each element (node) contains a reference to the next node." },
    { "question": "What is the difference between a singly and doubly linked list?", "answer": "A singly linked list contains references to the next node, while a doubly linked list has references to both the next and previous nodes." },
    { "question": "What is a Binary Tree?", "answer": "A binary tree is a hierarchical data structure where each node has at most two children, called the left and right child." },
    { "question": "What is a Binary Search Tree?", "answer": "A binary search tree is a binary tree where each node's left child contains values less than the node, and the right child contains values greater than the node." },
    { "question": "What is Depth-First Search (DFS)?", "answer": "DFS is an algorithm for traversing or searching tree/graph data structures by exploring as far as possible along each branch before backtracking." },
    { "question": "What is Breadth-First Search (BFS)?", "answer": "BFS is an algorithm for traversing or searching tree/graph data structures by exploring all neighbors at the present depth prior to moving on to nodes at the next depth level." },
    { "question": "What is the time complexity of Binary Search?", "answer": "O(log n), since it divides the search space in half each time." },
    { "question": "What is a Hash Table?", "answer": "A hash table is a data structure that maps keys to values using a hash function." },
    { "question": "What is a Heap?", "answer": "A heap is a complete binary tree where each node is either greater than or equal to (max-heap) or less than or equal to (min-heap) its children." },
    { "question": "What is a Trie?", "answer": "A trie is a tree-like data structure used to store a dynamic set of strings, where the keys are usually strings." },
    { "question": "What is Merge Sort?", "answer": "Merge Sort is a divide-and-conquer algorithm that divides the array into two halves, sorts them recursively, and then merges them." },
    { "question": "What is Quick Sort?", "answer": "Quick Sort is a divide-and-conquer algorithm that selects a pivot and partitions the array around the pivot, then sorts the partitions." },
    { "question": "What is Insertion Sort?", "answer": "Insertion Sort is a simple sorting algorithm where the array is virtually split into a sorted and unsorted part, and values are inserted into their correct position one by one." },
    { "question": "What is Selection Sort?", "answer": "Selection Sort is a sorting algorithm that repeatedly selects the smallest element from the unsorted portion and swaps it with the first unsorted element." },
    { "question": "What is Bubble Sort?", "answer": "Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order." },
    { "question": "What is the time complexity of Bubble Sort?", "answer": "O(n^2) in the worst and average cases, because every element must be compared with every other element." },
    { "question": "What is a Graph?", "answer": "A graph is a data structure consisting of a finite set of vertices (nodes) and edges connecting them." },
    { "question": "What is a Directed Graph?", "answer": "A directed graph is a graph where the edges have directions, meaning they point from one vertex to another." },
    { "question": "What is a Cycle in a Graph?", "answer": "A cycle is a path in a graph that starts and ends at the same vertex." },
    { "question": "What is Dijkstra’s Algorithm?", "answer": "Dijkstra’s Algorithm finds the shortest path from a starting node to all other nodes in a weighted graph." },
    { "question": "What is the time complexity of Merge Sort?", "answer": "O(n log n), since the array is divided in half log n times, and merging takes linear time." },
    { "question": "What is a Red-Black Tree?", "answer": "A Red-Black Tree is a balanced binary search tree with an additional color property to ensure balance during insertions and deletions." },
    { "question": "What is the difference between a Red-Black Tree and AVL Tree?", "answer": "Both are self-balancing binary search trees, but AVL trees are more rigidly balanced, while Red-Black trees are more flexible, allowing for faster insertions and deletions." },
    { "question": "What is Dynamic Programming?", "answer": "Dynamic Programming is a method of solving complex problems by breaking them down into simpler overlapping subproblems and solving each subproblem just once." },
    { "question": "What is the Knapsack Problem?", "answer": "The Knapsack Problem is an optimization problem where the goal is to maximize the value of items in a knapsack without exceeding its weight capacity." },
    { "question": "What is Memoization?", "answer": "Memoization is an optimization technique where results of expensive function calls are stored and returned when the same inputs occur again." },
    { "question": "What is the difference between BFS and DFS?", "answer": "BFS explores the graph level by level, while DFS explores as deep as possible along each branch before backtracking." },
    { "question": "What is a Topological Sort?", "answer": "Topological Sort is an ordering of vertices in a directed acyclic graph where for each directed edge uv, vertex u comes before v in the ordering." },
    { "question": "What is a Greedy Algorithm?", "answer": "A Greedy Algorithm makes the locally optimal choice at each stage with the hope of finding a global optimum." },
    { "question": "What is the difference between a Tree and a Graph?", "answer": "A tree is a type of graph with no cycles, and where there is exactly one path between any two nodes." },
    { "question": "What is a Hash Collision?", "answer": "A hash collision occurs when two different keys hash to the same index in a hash table." },
    { "question": "What is a Bloom Filter?", "answer": "A Bloom Filter is a probabilistic data structure that is used to test whether an element is a member of a set." },
    { "question": "What is Kruskal’s Algorithm?", "answer": "Kruskal’s Algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted, undirected graph." },
    { "question": "What is Prim’s Algorithm?", "answer": "Prim’s Algorithm is a greedy algorithm that finds a minimum spanning tree by starting with a single vertex and adding the smallest edge to the tree at each step." },
    { "question": "What is the time complexity of Insertion Sort?", "answer": "O(n^2) in the worst case, since every element may need to be compared with all previously sorted elements." },
    { "question": "What is Ternary Search?", "answer": "Ternary Search is a divide-and-conquer algorithm similar to binary search but splits the search space into three parts." },
    { "question": "What is a Self-Balancing Tree?", "answer": "A self-balancing tree is a binary search tree that automatically keeps its height small after insertions and deletions to maintain O(log n) time complexity." },
    { "question": "What is the time complexity of BFS?", "answer": "O(V + E), where V is the number of vertices and E is the number of edges in the graph." },
    { "question": "What is Amortized Time Complexity?", "answer": "Amortized time complexity is the average time per operation over a sequence of operations, even though some operations may be more expensive than others." },
    { "question": "What is a Circular Queue?", "answer": "A circular queue is a linear data structure that connects the last position back to the first position to form a circle, optimizing space." },
    { "question": "What is Floyd-Warshall Algorithm?", "answer": "The Floyd-Warshall algorithm is a dynamic programming algorithm to find the shortest paths between all pairs of vertices in a weighted graph." },
    { "question": "What is Bellman-Ford Algorithm?", "answer": "Bellman-Ford Algorithm computes the shortest paths from a single source vertex to all other vertices in a graph that may have negative weight edges." },
    { "question": "What is Heap Sort?", "answer": "Heap Sort is a comparison-based sorting algorithm that uses a binary heap to sort elements." },
    { "question": "What is the difference between Merge Sort and Quick Sort?", "answer": "Quick Sort is faster on average, but has O(n^2) time complexity in the worst case, while Merge Sort always has O(n log n) time complexity but requires additional memory."
  }
]